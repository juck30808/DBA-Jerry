--准备工作
CREATE DATABASE LAB2;
CONNECT TO LAB2;
CREATE SCHEMA Lab2DB;
SET SCHEMA=Lab2DB;
---------------------------------------------------------------
--创建表
--当前还没有设置dept的外键，因为Dept表不存在
CREATE TABLE Staff(
			name VARCHAR(20) NOT NULL,
			id CHAR(5) NOT NULL,
			birthday DATE,
			homeaddress CHAR(50),
			annualsalary INT,
			adminid CHAR(5)
				CONSTRAINT fk_admin REFERENCES Staff(id),
			deptno CHAR(5) ,
			PRIMARY KEY(id)
);
--创建部门表
CREATE TABLE Dept(
		deptname VARCHAR(20) NOT NULL,
		deptno CHAR(5) NOT NULL PRIMARY KEY,
		bossid CHAR(5) REFERENCES Staff(id) ON UPDATE RESTRICT ON DELETE SET NULL
);
--补充设置职工表的deptno外键
ALTER TABLE Staff ADD CONSTRAINT fk_deptno FOREIGN KEY(deptno) REFERENCES Dept(deptno) ON DELETE RESTRICT ON UPDATE RESTRICT;

--新建项目表，其中的主管部门编号是外键，项目名称要求Unique
--当主管部门被撤后，其项目一并删除
CREATE TABLE Project(pname VARCHAR(50) UNIQUE NOT NULL,
		pno CHAR(10) NOT NULL PRIMARY KEY,
		city VARCHAR(20),
		deptno CHAR(5) CONSTRAINT fk_deptno REFERENCES Dept(deptno) ON UPDATE RESTRICT ON DELETE CASCADE);
--新建工作表，其中的职工工号和项目编号为外键,连锁删除
CREATE TABLE Work(
		employeeid CHAR(5) NOT NULL REFERENCES Staff(id) ON DELETE CASCADE ON UPDATE RESTRICT,
		pno CHAR(10) NOT NULL REFERENCES Project(pno) ON DELETE CASCADE ON UPDATE RESTRICT,
		workdate DATE NOT NULL,
		PRIMARY KEY(employeeid,pno)
		);
--新建家属表,其中职工工号为外键
CREATE TABLE  Family(
		employeeid CHAR(5) NOT NULL REFERENCES Staff(id) ON UPDATE RESTRICT ON DELETE CASCADE,
		fname VARCHAR(20) NOT NULL,
		fsex CHAR(1));




--------------------------------------------------------------
--插入数据
--Super boss
INSERT INTO Staff(name,id,birthday,homeaddress,annualsalary,adminid,deptno) values
('Super Boss','00000','2000-1-1','A super big house',888888,NULL,NULL);
--Boss Office
INSERT INTO Dept(deptname,deptno,bossid) values
('Boss Office','70000','00000');
--Little Bosses
INSERT INTO Staff(name,id,birthday,homeaddress,annualsalary,adminid,deptno) values
('Little Boss1','10001','2001-1-1','A little big house in street A',666666,'00000','70000'),
('Little Boss2','10002','2001-1-2','A little big house in street B',666666,'00000','70000'),
('Little Boss3','10003','2001-1-3','A little big house in street C',666666,'00000','70000');
--Other departments
INSERT INTO Dept values
('Programmer Dept','70001','10001'),
('Worker Management','70002','10002'),
('Project Management','70003','10002');
--Poor Workers
INSERT INTO Staff values
('Programmer1','20001','2002-2-2','Company Dormitary',1234,'10003','70001'),
('Programmer2','20002','2002-3-2','Company Dormitary',1234,'10003','70001'),
('Worker1','20003','2003-1-1',NULL,1000,'10003','70002'),
('Worker2','20004','2003-1-2',NULL,1000,'10003','70002'),
('Worker3','20005','2003-1-3',NULL,1000,'10003','70002');

--Projects
INSERT INTO Project(pname,pno,city,deptno) values
('database homework','50001','Nanjing','70001'),
('database work','50002','Nanjing','70003'),
('Meetings','50000','Beijing','70000');
--Work
INSERT INTO Work(employeeid,pno,workdate) values
('20001','50001','2011-1-1'),
('20002','50002','2011-2-1'),
('20003','50002','2011-2-1'),
('20004','50002','2011-2-1'),
('00000','50000','2011-1-1'),
('10001','50000','2011-1-1'),
('10002','50000','2011-1-1'),
('10003','50000','2011-1-1');
--Family
INSERT INTO Family(employeeid,fname,fsex) values
('00000','Boss Wife','f'),
('00000','Boss Child','m'),
('20001','Programmer GF','f');


----------------------------------------------------------------------------
--测试约束
--约束不满足的情况
	--外键不满足,在Staff表中没有id为10000的员工
	--不满足Family外键
INSERT INTO Family values
('10000','Hello,Test','f');
	--DELETE约束不满足，fk_admin约束的删除默认行为为NO ACTION
	--从Staff表中删除Super Boss时必须将其他人的管理员id的设置为另外的值
DELETE FROM Staff WHERE Staff.id='00000';
	--UPDATE约束不满足，Project表中deptno外键的UPDATE为严格约束，
	--在更新deptno从70001->77777的过程中必须保证没有Project表中先被修改
UPDATE Dept SET deptno='77777' WHERE deptno='70001';

	--Dept表中bossid外键的DELETE情况设置为SET NULL
	--从Staff表中删除后，验证Dept表中Boss Office的Boss id为NULL
		--插入新Boss（火星人）接替原有的Super Boss，
		--更新表Staff使Super Boss满足Staff表中bossid的删除约束条件
	--同时Family表中的外键employeeid在DELETE行为下设置的为CASCADE，可以看到该操作的结果
	INSERT INTO Staff values
	('Ultra Boss','99999','1970-1-1','Mars',99999,NULL,'70001');
	UPDATE Staff SET adminid='99999' WHERE adminid='00000';
		--观察删除Super Boss前后Dept表的表现
	SELECT * FROM Dept;
	DELETE FROM Staff WHERE id='00000';
	SELECT * FROM Dept;
	SELECT * FROM Family;
	
--------------------------------------------------------
--创建触发器
CREATE TRIGGER increase_salary
AFTER INSERT ON Work
REFERENCING NEW AS N
FOR EACH ROW MODE DB2SQL
	UPDATE Staff SET Staff.annualsalary = Staff.annualsalary * 1.02 WHERE Staff.id = N.employeeid;
--触发前后观察Staff表
SELECT * FROM Staff;
INSERT INTO Work values('20003','50000','2011-5-1');
INSERT INTO Work values('20003','50001','2011-5-1');
SELECT * FROM Staff;

----------------------------------------------
--权限设置
--利用操作系统中的有关命令创建用户，这里直接使用安装数据库中创建的DAS管理员（不是DBA管理员)用户dasadm
--以dasadm连接数据库，因为dasadm不是LAB2实例的所有者，因此其不具有实例2中的权限
--dasadm没有LAB2中的一般权限。
connect to LAB2 user dasadm using ********;
select * from Lab2DB.Staff;
--赋予权限，这些命令以用户bsidb登陆。
CONNECT TO LAB2 user bsidb using *******;
GRANT SELECT ON Lab2DB.Work TO DASADM;
--然后在dasadm登陆的界面中，可以执行如下操作
SELECT * FROM Lab2DB.Work;

